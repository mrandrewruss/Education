# Задача 1. Сумма чисел

# Напишите функцию summa_n, которая принимает одно целое положительное число N и выводит сумму всех чисел от 1
# до N включительно.
#
# Пример работы программы:
# Введите число: 5
# Я знаю, что сумма чисел от 1 до 5 равна 15

def summa_n(n):
    summa = 0
    for i in range(1, n + 1):
        summa += i
    print(f"Я знаю, что сумма чисел от до {n} равна {summa}")


n = int(input('Введите число N: '))
summa_n(n)


# =========================================================
# Задача 2. Функция в функции

def positive():
    print("Положительное")


def negative():
    print("Отрицательное")


def test():
    int_num = int(input('Введите целое число: '))
    if int_num >= 0:
        positive()
    else:
        negative()


test()


# =========================================================
# Задача 3. Апгрейд калькулятора

# Степан, как и большая часть населения планеты, для расчёта суммы и разности чисел использует калькулятор.
#
# Однако в работе ему нужно делать не только  обычные действия вроде сложения и вычитания, а делать что-то вручную
# он уже устал. Поэтому Степан решил немного расширить функциональность своего калькулятора.
# Напишите программу,которая спрашивает у пользователя число и действие, которое нужно с ним сделать:
# вывести сумму его цифр, вывести максимальную цифру или вывести минимальную цифру.
#
# Каждое действие оформите в виде отдельной функции, а основную программу зациклите.

def sum_num(number):
    summ = 0
    while number != 0:
        summ += number % 10
        number //= 10
    print('\nСумма цифр равна: ', summ)
    calculator()


def min_num(number):
    count = 9
    while number != 0:
        if count > number % 10:
            count = number % 10
        number //= 10
    print('\nНаименьшее число:', count)
    calculator()


def max_num(number):
    count = 0
    for numm in range(number):
        if count < number % 10:
            count = number % 10
        number //= 10
    print('\nНаибольшее число:', count)
    calculator()


def calculator():
    number = int(input('Введите число: '))
    choise = int(
        input('\nВыберете действие:\n1 - сумма цифр.\n2 - найти наименьшее число.\n3 - найти наибольшее число.\n'))
    if choise == 1:
        sum_num(number)
    if choise == 2:
        min_num(number)
    if choise == 3:
        max_num(number)
    else:
        print('\nОшибка')
        calculator()


calculator()


# =========================================================
# Задача 4. Число наоборот

# Вводится последовательность чисел, которая оканчивается нулём.
# Реализуйте функцию, которая принимает в качестве аргумента каждое число, переворачивает его и выводит на экран.

# Пример:
# Введите число: 1234
# Число наоборот: 4321
#
# Введите число: 1000
# Число наоборот: 0001
#
# Введите число: 0
# Программа завершена!
#
# Дополнительно: добейтесь такого вывода чисел, если в его начале идут нули.
#
# Введите число: 1230
# Число наоборот: 321
#
# Кстати, нули, которые мы убрали, называются ведущими.
def func(number):
    rev_number = 0
    while number > 0:
        num = number % 10
        number //= 10
        rev_number *= 10
        rev_number += num
    print("Число наоборот:", rev_number)


while True:
    number = int(input("Введите число: "))
    if number == 0:
        print("Программа завершена")
        break
    elif number > 0:
        func(number)
    else:
        print("Ошибка ввода")


# =========================================================
# Задача 5. Текстовый редактор

# Мы продолжаем разрабатывать новый текстовый редактор, и в этот раз нам поручили написать для него код,
# который считает количество любой буквы и любой цифры в тексте (а не только буквы Ы как раньше).
#
# Напишите функцию count_letters, которая принимает на вход текст и подсчитывает, какое в нём количество цифр K и букв N.
# Функция должна вывести на экран информацию о найденных буквах и цифрах в определенном формате.
#
# Пример:
# Введите текст: 100 лет в обед
# Какую цифру ищем? 0
# Какую букву ищём? л
#
# Количество цифр 0: 2
# Количество букв л: 1

def count_letters(text):
    count_letter = 0
    count_number = 0
    letter = input("Какую букву ищем? ")
    number = input("Какую цифру ищем? ")

    for symbol in text:
        if symbol == letter:
            count_letter += 1
        elif symbol == number:
            count_number += 1

    print()
    print(f'Количество букву {letter} = {count_letter}')
    print(f'Количество цифр {number} = {count_number}')


text = input("Введите текст: ")
count_letters(text)


# =========================================================
# Задача 6. Монетка

# Практиканту дали задание найти старую металлическую монетку по заданным координатам.
# Металлоискатель сканирует местность вокруг пользователя и при обнаружении/отсутствии металла прибор отображает на экране соответствующее сообщение.
#
# Даны два действительных числа x и y.
# Напишите функцию, которая проверяет, принадлежит ли точка с координатами (x,y) заштрихованному квадрату (включая его границу).
# Если точка принадлежит квадрату, выведите сообщение “Монетка где-то рядом”, иначе выведите сообщение “Монетки в области нет”.
#
# На рисунке сетка проведена с шагом 1.
#         ^
#         |
#        *|*
# ========+=======>
#        *|*
#         |

def scanner():
    x = float(input("Введите координату x: "))
    y = float(input("Введите координату y: "))
    if (-1 <= x <= 1) and (-1 <= y <= 1):
        print("Монетка где-то рядом")
    else:
        print("Монетки в области нет")


scanner()


# =========================================================
# Задача 7. Опять?

# Вы снова встретились со своим старым другом, который был безмерно благодарен вам за то, что вы помогли ему сдать задачу тому преподавателю.
# Вот только друг всё равно выглядел довольно грустным.
# Спросив в чём дело, друг взорвался эмоциями и рассказал, что теперь препод попросил написать функцию нахождения минимального числа
# без использования условного оператора, циклов и функции min.
#
# Конечно же, вы решили снова помочь бедняге.
# Напишите для него такую программу.

def minimum():
    number_1 = int(input('Введите первое число: '))
    number_2 = int(input('Введите второе число: '))
    summ = number_1 + number_2
    difference = abs(number_1 - number_2)
    min = int((summ - difference) / 2)
    print('Минимальное число это: ', min)


minimum()


# =========================================================
# Задача 8. НОД

# Напишите функцию, вычисляющую наибольший общий делитель двух чисел

def divider():
    number_1 = int(input("Введите первое число: "))
    number_2 = int(input("Введите второе число: "))
    while number_1 != 0 and number_2 != 0:
        if number_1 > number_2:
            number_1 = number_1 % number_2
        else:
            number_2 = number_2 % number_1
    divider = number_1 + number_2
    print("Наибольший общий делитель двух чисел:", divider)


divider()

# =========================================================
# Задача 9. Недоделка

# Вы пришли на работу в контору по разработке игр, целевая аудитория которых - дети и их родители.
# У прошлого программиста было задание сделать две игры в одном приложении, чтобы пользователь мог выбирать одну из них.
# Однако программист, на место которого вы пришл и, перед увольнением не успел сделать эту задачу и оставил только небольшой шаблон проекта.
# Используя этот шаблон, реализуйте игры «Камень, ножницы, бумага» и «Угадай число».
#
# Правила игры «Камень, ножницы, бумага»: программа запрашивает у пользователя строку и выводит победил он или проиграл.
# Камень бьёт ножницы, ножницы режут бумагу, бумага кроет камень.
#
# Правила игры “Угадай число”: программа запрашивает у пользователя число до тех пор, пока он его не отгадает.


def mainMenu():
    print('Игра №1. Камень, ножницы, бумага')
    print('Игра №2. Угадай число')
    gameSelection = int(input('Выберите номер игры (1 или 2) в которую хотите сыграть: '))

    if gameSelection == 1:
        print('\nИгра №1. Камень, ножницы, бумага')
        rock_scissors_paper()
    elif gameSelection == 2:
        print('\nИгра №2. Угадай число')
        guess_the_number()
    else:
        print('Игра с таким номером не существует. Введите 1 или 2')
        mainMenu()


def rock_scissors_paper():
    computer = "камень"
    choice = input('\nВыберите камень, ножницы или бумагу - ')
    if choice == computer or choice == "Камень":
        print('НИЧЬЯ ! Компьютер тоже выбрал Камень!')
        print()
    elif choice == "ножницы" or choice == "Ножницы":
        print('Камень бьёт ножницы! Вы проиграли!')
        print()
    elif choice == "бумага" or choice == "Бумага":
        print('Бумага кроет камень! Вы выиграли!')
        print()
    else:
        print('Неверный ввод! Попробуйте ещё раз!')
        print()
        rock_scissors_paper()
    mainMenu()


def guess_the_number():
    choice_number = int(input('\nВведите число от 1 до 10: '))
    computer = 7
    if choice_number == computer:
        print('Вы угадали! Компьютер загадал число', computer)
        print()
        mainMenu()
    else:
        print('Вы не угадали! Попробуйте еще раз.')
        print()
        guess_the_number()


mainMenu()